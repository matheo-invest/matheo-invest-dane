import hashlib
from datetime import date

OUT_XML = "Matheo_Invest_dane.xml"
OUT_MD5 = "Matheo_Invest_dane.md5"
BASE_URL = "https://matheo-invest.github.io/matheo-invest-dane"

today = date.today().strftime("%Y-%m-%d")

lines = []
lines.append('<?xml version="1.0" encoding="UTF-8"?>')
lines.append('<ns2:datasets xmlns:ns2="urn:otwarte-dane:harvester:1.13" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"')
lines.append('               xsi:noNamespaceSchemaLocation="https://www.dane.gov.pl/static/xml/otwarte_dane_latest.xsd">')

# --- Apartamenty Sztabowa ---
lines.append('  <dataset status="published">')
lines.append('    <extIdent>mi_sztabowa_zbior</extIdent>')
lines.append('    <title>')
lines.append('      <polish>Apartamenty Sztabowa – ceny ofertowe</polish>')
lines.append('      <english>Sztabowa Apartments – offer prices</english>')
lines.append('    </title>')
lines.append('    <description>')
lines.append('      <polish>Zbiór zawiera aktualne ceny ofertowe mieszkań w inwestycji Apartamenty Sztabowa od Matheo Invest.</polish>')
lines.append('      <english>The dataset contains current offer prices of apartments in the Sztabowa investment by Matheo Invest.</english>')
lines.append('    </description>')
lines.append(f'    <url>{BASE_URL}/</url>')
lines.append('    <categories>')
lines.append('      <category>ECON</category>')
lines.append('    </categories>')
lines.append('    <tags>Deweloper</tags>')
lines.append('    <updateFrequency>daily</updateFrequency>')
lines.append(f'    <lastUpdateDate>{today}</lastUpdateDate>')
lines.append('    <hasDynamicData>false</hasDynamicData>')
lines.append('    <hasHighValueData>true</hasHighValueData>')
lines.append('    <hasHighValueDataFromEuropeanCommissionList>false</hasHighValueDataFromEuropeanCommissionList>')
lines.append('    <hasResearchData>false</hasResearchData>')
lines.append('    <resources>')
lines.append('      <resource status="published">')
lines.append('        <extIdent>mi_sztabowa_ceny</extIdent>')
lines.append(f'        <url>{BASE_URL}/datasets/sztabowa/ceny.xlsx</url>')
lines.append('        <title>')
lines.append('          <polish>Ceny ofertowe – plik XLSX</polish>')
lines.append('          <english>Offer prices – XLSX file</english>')
lines.append('        </title>')
lines.append('        <description>')
lines.append('          <polish>Aktualne ceny ofertowe mieszkań, publikowane w formacie XLSX.</polish>')
lines.append('          <english>Current offer prices of apartments, published in XLSX format.</english>')
lines.append('        </description>')
lines.append('        <availability>remote</availability>')
lines.append(f'        <dataDate>{today}</dataDate>')
lines.append('        <specialSigns><specialSign>X</specialSign></specialSigns>')
lines.append('        <hasDynamicData>false</hasDynamicData>')
lines.append('        <hasHighValueData>true</hasHighValueData>')
lines.append('        <hasHighValueDataFromEuropeanCommissionList>false</hasHighValueDataFromEuropeanCommissionList>')
lines.append('        <hasResearchData>false</hasResearchData>')
lines.append('        <containsProtectedData>false</containsProtectedData>')
lines.append('      </resource>')
lines.append('    </resources>')
lines.append('  </dataset>')

# --- Klebark Park ---
lines.append('  <dataset status="published">')
lines.append('    <extIdent>mi_klebark_zbior</extIdent>')
lines.append('    <title>')
lines.append('      <polish>Klebark Park – ceny ofertowe</polish>')
lines.append('      <english>Klebark Park – offer prices</english>')
lines.append('    </title>')
lines.append('    <description>')
lines.append('      <polish>Zbiór zawiera aktualne ceny ofertowe mieszkań w inwestycji Klebark Park od Matheo Invest.</polish>')
lines.append('      <english>The dataset contains current offer prices of apartments in the Klebark Park investment by Matheo Invest.</english>')
lines.append('    </description>')
lines.append(f'    <url>{BASE_URL}/</url>')
lines.append('    <categories>')
lines.append('      <category>ECON</category>')
lines.append('    </categories>')
lines.append('    <tags>Deweloper</tags>')
lines.append('    <updateFrequency>daily</updateFrequency>')
lines.append(f'    <lastUpdateDate>{today}</lastUpdateDate>')
lines.append('    <hasDynamicData>false</hasDynamicData>')
lines.append('    <hasHighValueData>true</hasHighValueData>')
lines.append('    <hasHighValueDataFromEuropeanCommissionList>false</hasHighValueDataFromEuropeanCommissionList>')
lines.append('    <hasResearchData>false</hasResearchData>')
lines.append('    <resources>')
lines.append('      <resource status="published">')
lines.append('        <extIdent>mi_klebark_ceny</extIdent>')
lines.append(f'        <url>{BASE_URL}/datasets/klebark/ceny.xlsx</url>')
lines.append('        <title>')
lines.append('          <polish>Ceny ofertowe – plik XLSX</polish>')
lines.append('          <english>Offer prices – XLSX file</english>')
lines.append('        </title>')
lines.append('        <description>')
lines.append('          <polish>Aktualne ceny ofertowe mieszkań, publikowane w formacie XLSX.</polish>')
lines.append('          <english>Current offer prices of apartments, published in XLSX format.</english>')
lines.append('        </description>')
lines.append('        <availability>remote</availability>')
lines.append(f'        <dataDate>{today}</dataDate>')
lines.append('        <specialSigns><specialSign>X</specialSign></specialSigns>')
lines.append('        <hasDynamicData>false</hasDynamicData>')
lines.append('        <hasHighValueData>true</hasHighValueData>')
lines.append('        <hasHighValueDataFromEuropeanCommissionList>false</hasHighValueDataFromEuropeanCommissionList>')
lines.append('        <hasResearchData>false</hasResearchData>')
lines.append('        <containsProtectedData>false</containsProtectedData>')
lines.append('      </resource>')
lines.append('    </resources>')
lines.append('  </dataset>')

# --- Zakończenie ---
lines.append('</ns2:datasets>')

xml = "\n".join(lines)
with open(OUT_XML, "w", encoding="utf-8") as f:
    f.write(xml)

with open(OUT_MD5, "w", encoding="utf-8") as f:
    f.write(hashlib.md5(xml.encode("utf-8")).hexdigest())
